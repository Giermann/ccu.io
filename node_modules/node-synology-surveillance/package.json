{
  "name": "node-synology-surveillance",
  "version": "1.1.0",
  "description": "NPM module to interact with the Surveillance Station by Synology",
  "main": "lib/synology.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "keywords": [
    "Synology",
    "Diskstation",
    "Surveillance",
    "Station",
    "cam",
    "video",
    "record"
  ],
  "author": {
    "name": "Thorsten Kamann",
    "email": "thorsten.kamann@gmail.com",
    "url": "http://www.kamann.info/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/thorque/node-synology-surveillance"
  },
  "bugs": {
    "url": "https://github.com/thorque/node-synology-surveillance/issues"
  },
  "dependencies": {
    "util": "~0.10.3",
    "request": "~2.37.0",
    "events": "~1.0.1"
  },
  "devDependencies": {
    "mocha": "~1.20.1",
    "chai": "~1.9.1"
  },
  "readme": "\n[![Build Status](https://travis-ci.org/thorque/node-synology-surveillance.svg?branch=master)](https://travis-ci.org/thorque/node-synology-surveillance)\n[![Dependency Status](https://gemnasium.com/thorque/node-synology-surveillance.svg)](https://gemnasium.com/thorque/node-synology-surveillance)\n\nnode-synology-surveillance\n===\n\nNode module to interact with the Surveillance Station by Synology.\n\n# Installation\n\n    $ npm install node-synology-surveillance\n\n# Usage\n\nYou can use this module on the same way as you do it with oter modules:\n\n```javascript\nvar Synology = require('node-synology-surveillance');\n\nvar syno = new Synology({\n    host    : 'localhost',\n    user    : 'user',\n    password: 'userpwd'\n});\n\nsyno.surveillance.info.get_info(function(err, data){\n    if (err) throw err;\n    console.log(data);\n});\n```\n\nAll functions have the same structure:\n\n```javascript\nsyno.surveillance.{API}.{function}([params], [callback]{}\n```\n\nThe *params* are optional (doumented in the original WebApi document with samples) and are in the form of an object.\n\n```javascript\nsyno.surveillance.recording.record({\n    cameraId: 1,\n    action: \"stop\"\n}, function(err, data){\n    if (err) throw err;\n    //do anything with the data\n});\n```\n\nThe callback is optional too, if you don't need the data or the error.\n\n# Implemented APIs\n\nThe [Surveillance Station's WebApi by Synology](http://www.synology.com/en-global/support/surveillance_station_web_api) \nprovides many APIs:\n \n API Name | Description | Section \n -------- | ----------- | ------- \n SYNO.API.Info | Discover all API information | 2.3.1\n SYNO.API.Auth | Perform session login and logout | 2.3.2\n SYNO.SurveillanceStation.Info | Retrieve Surveillance Station-related general information | 2.3.3\n SYNO.SurveillanceStation.Camera | Retrieve camera-related information | 2.3.4\n SYNO.SurveillanceStation.PTZ | Perform camera PTZ actions | 2.3.5\n SYNO.SurveillanceStation.ExternalRecording | Control external recording of cameras | 2.3.6\n SYNO.SurveillanceStation.Event | Query event information | 2.3.7\n SYNO.SurveillanceStation.Device | Get information of Visual Station and CMS | 2.3.8\n SYNO.SurveillanceStation.Emap | Get information of defined E-Maps. | 2.3.9\n SYNO.SurveillanceStation.Streaming | Get video stream of live view and recorded events | 2.3.10\n SYNO.SurveillanceStation.AudioStream | Get audio stream of live view | 2.3.11\n SYNO.SurveillanceStation.VideoStream | Get video stream of live view | 2.3.12\n SYNO.SurveillanceStation.Notification | Get authorized token of DS. | 2.3.13\n \n Not all APIs are implemented. Here is a list with the implemented APIs:\n \n API Name | All methods implemented?\n -------- | ------------------------\n SYNO.SurveillanceStation.Info | [x]\n SYNO.SurveillanceStation.Camera | [x]\n SYNO.SurveillanceStation.ExternalRecording | [x]\n SYNO.SurveillanceStation.Event | [x]\n SYNO.SurveillanceStation.Streaming | [x]\n SYNO.SurveillanceStation.AudioStream | [x]\n SYNO.SurveillanceStation.VideoStream | [x]\n\n# Licence\nThe MIT License (MIT)\n\nCopyright (c) {{{2014}}} {{{ThorQue}}}\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/thorque/node-synology-surveillance",
  "_id": "node-synology-surveillance@1.1.0",
  "_from": "node-synology-surveillance@"
}
